# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                           controllers.Application.index
OPTIONS     /*all                       controllers.Application.preflight(all)
# Posts
GET         /app/posts                  controllers.Application.getPosts
POST        /app/post                   controllers.Post.addPost
GET         /app/post/:id               controllers.Application.getPost(id: Long)
GET         /app/userposts              controllers.Post.getUserPosts
POST        /app/comment                controllers.Post.addComment

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file               controllers.Assets.at(path="/public", file)


# banckend api

#test

POST    /login                          controllers.SecurityController.login
POST    /logout                         controllers.SecurityController.logout

# authentication

# admin register
POST        /api/v1/admin/signup                 controllers.Application.signUpAdmin
# admin login
POST        /api/v1/admin/login                  controllers.Application.loginForAdmin
# admin logout
GET         /api/v1/admin/logout                 controllers.Application.logoutForAdmin
# islogin
GET         /api/v1/admin/isauthenticated        controllers.Application.isAuthenticatedForAdmin
# curAdmin
GET          /api/v1/curadmin                    controllers.Application.getCurAdmin

# category

# add category
POST        /api/v1/category                     controllers.CategoryController.addCategory()
# get category
GET         /api/v1/categories                   controllers.CategoryController.getCategories()
# delete category
DELETE      /api/v1/category/:id               controllers.CategoryController.deleteCategory(id: Long)

# article

# get all articles
GET         /api/v1/articles                        controllers.ArticleController.getArticles()
# get article by category
GET         /api/v1/articles/:cateId                controllers.ArticleController.getArticlesByCategory(cateId: Long)
# post article
POST        /api/v1/article                         controllers.ArticleController.addArticle
# view article
GET         /api/v1/article/:id                     controllers.ArticleController.getArticle(id: Long)
# update article
PUT         /api/v1/article/:id                     controllers.ArticleController.updateArticle(id: Long)
# delete article
DELETE      /api/v1/article/:id                     controllers.ArticleController.deleteArticle(id: Long)
# get expert's articles
GET         /api/v1/expert/:expertId/articles       controllers.ArticleController.getArticlesByExpert(expertId: Long)


# user manage

# get all users
GET         /api/v1/users                           controllers.UserController.getAllUsers
# get users by type
GET         /api/v1/users/:userType                 controllers.UserController.getUsersByType(userType: String)
# view user details
GET         /api/v1/user/:id                        controllers.UserController.getUser(id: Long)
# update user
PUT         /api/v1/user/:id                        controllers.UserController.updateUser(id: Long)
# delete user
DELETE      /api/v1/user/:id                        controllers.UserController.deleteUser(id: Long)



# client api

# authentication

# user register first
POST         /api/v1/signup/one         controllers.Application.signUpOneStep
# user register second
POST         /api/v1/signup/two         controllers.Application.signUpTwoStep
# user login
POST         /api/v1/login              controllers.Application.login
# user logout
GET          /api/v1/logout             controllers.Application.logout
# islogin
GET          /api/v1/isauthenticated    controllers.Application.isAuthenticated
# curinfo
GET          /api/v1/curuser            controllers.Application.getCurUser

# video

# add video
POST        /api/v1/video                   controllers.VideoController.addVideo
# get videoById
GET         /api/v1/video/:id               controllers.VideoController.getVideoById(id: Long)
# get  all video
GET         /api/v1/videos                  controllers.VideoController.getVideos
# update video
GET         /api/v1/video/:id               controllers.VideoController.updateVideo(id: Long)
# delete video
DELETE      /api/v1/video/:id               controllers.VideoController.deleteVideo(id: Long)

# question
GET         /api/v1/questions                       controllers.QuestionController.getQuestions
# post question
POST        /api/v1/question                        controllers.QuestionController.addQuestion
# view question
GET         /api/v1/question/:id                    controllers.QuestionController.getQuesion(id: Long)
# update question
PUT         /api/v1/question/:id                    controllers.QuestionController.updateQuestion(id: Long)
# delete question
DELETE      /api/v1/question/:id                    controllers.QuestionController.deleteQuestion(id: Long)
# get expert's question
GET         /api/v1/expert/:expertId/questions      controllers.QuestionController.getQuestionsByExpert(expertId: Long)
# get User's question
GET         /api/v1/user/questions                  controllers.QuestionController.getUserQuestions
# add a answer
POST        /api/v1/question/answer                 controllers.QuestionController.addAnswer
# fav question
POST        /api/v1/question/:id/fav                controllers.QuestionController.favQuestion(id: Long)
# unFav question
PUT         /api/v1/question/:id/unFav              controllers.QuestionController.unFavQuestion(id: Long)

